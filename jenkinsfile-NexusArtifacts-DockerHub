pipeline {
    agent any

    environment {
        // Environment variables
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        NEXUS_REPO_URL = 'http://172.31.17.132:8081/java/'
        ARTIFACT_GROUP = 'java'
        ARTIFACT_NAME = 'server.jar'
        ARTIFACT_VERSION = '1.0-SNAPSHOT'
        DOCKER_IMAGE_NAME = 'ranjeeth3302/devops-java'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                // Replace with your version control checkout step if necessary
                git 'https://github.com/RanjeethAcharya/devops.jar.git'
            }
        }

        stage('Download Artifact') {
            steps {
                script {
                    echo 'Downloading artifact from Nexus...'
                    sh """
                        curl -o ${ARTIFACT_NAME} \
                        ${NEXUS_REPO_URL}/${ARTIFACT_GROUP.replace('.', '/')}/${ARTIFACT_NAME}/${ARTIFACT_VERSION}/${ARTIFACT_NAME}-${ARTIFACT_VERSION}.jar
                    """
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    echo 'Building Docker image...'
                    sh """
                        docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} \
                        --build-arg JAR_FILE=${ARTIFACT_NAME} .
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    echo 'Pushing Docker image...'
                    docker.withRegistry('', 'dockerhub') {
                        sh "docker push ${DOCKER_IMAGE_NAME}:${BUILD_NUMBER}"
                        sh "docker push ${DOCKER_IMAGE_NAME}:${DOCKER_TAG}"
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs() // Clean workspace after build
        }
        success {
            echo 'Build and push completed successfully!'
        }
        failure {
            echo 'Build and push failed.'
        }
    }
}

